#include <libce.h>
#define NOTE_NUM 72

// tabelle di note
char tab_note[][4] = {
	"c1", "c#1", "d1", "d#1", "e1", "f1", "f#1", "g1", "g#1", "a1", "a#1", "b1",
	"c2", "c#2", "d2", "d#2", "e2", "f2", "f#2", "g2", "g#2", "a2", "a#2", "b2",
	"c3", "c#3", "d3", "d#3", "e3", "f3", "f#3", "g3", "g#3", "a3", "a#3", "b3",
	"c4", "c#4", "d4", "d#4", "e4", "f4", "f#4", "g4", "g#4", "a4", "a#4", "b4",
	"c5", "c#5", "d5", "d#5", "e5", "f5", "f#5", "g5", "g#5", "a5", "a#5", "b5",
	"c6", "c#6", "d6", "d#6", "e6", "f6", "f#6", "g6", "g#6", "a6", "a#6", "b6",
	"c7", "c#7", "d7", "d#7", "e7", "f7", "f#7", "g7", "g#7", "a7", "a#7", "b7",
};
natl tab_div[] = {
	36391, 34343, 32416, 30599, 28883, 27262, 25729, 24285, 22924, 21636, 20422, 19274, 
	18192, 17171, 16208, 15299, 14439, 13629, 12864, 12142, 11461, 10818, 10211, 9637,
	9097, 8586, 8104, 7649, 7220, 6815, 6432, 6071, 5730, 5409, 5105, 4818,
	4548, 4293, 4052, 3824, 3610, 3407, 3216, 3035, 2865, 2704, 2552, 2409,
	2274, 2146, 2026, 1912, 1805, 1703, 1608, 1517, 1432, 1352, 1276, 1204,
	1137, 1073, 1013, 956, 902, 851, 804, 758, 716, 676, 638, 602,
	568, 536, 506, 478, 451, 425, 402, 379, 358, 338, 319, 301,
};

// strcmp per scrivere le note col loro nome
int strcmp(char* a, char* b) {	
	while(*a && (*a == *b)) {
		a++;
		b++;
	}

	return *a - *b;
}

// debug: stampa un natl
void print_natl(natl num) {	
	char str[] = "00000";
	int i = 4;

	while(true) {
		natl q = num / 10;
		int r = num % 10;
		
		if(num != 0) {
			str[i] = r + '0';
			i--;
		} else break;

		num = q;
	}

	vid::str_write(str);
}

// un frame del brano
struct song_frame {
	int mode; // 0: off, 1: on, 2: legato
	char note[4];

	// ottieni il divisore corrispondente alla nota
	int get_divisor() {
		// vai per scansione lineare
		for(int i = 0; i < NOTE_NUM; i++) {
			if(strcmp(note, tab_note[i]) == 0) {
				return tab_div[i];
			}
		}

		return 0;
	}
};

// brano (bad apple)
song_frame song[] = {
	{1, "c4"},  // 0-0
	{1, "d4"},
	{1, "d#4"}, // 0-1
	{1, "f4"},
	{1, "g4"},  // 0-2
	{2, "g4"},  
	{1, "c5"},  // 0-3
	{1, "a#4"}, 
	{1, "g4"},  // 1-0
	{2, "g4"},
	{1, "c4"},  // 1-1
	{0, "c4"},
	{1, "g4"},  // 1-2
	{1, "f4"},  
	{1, "d#4"}, // 1-3
	{1, "d4"}, 
	{1, "c4"},  // 2-0
	{1, "d4"},
	{1, "d#4"}, // 2-1
	{1, "f4"},
	{1, "g4"},  // 2-2
	{2, "g4"},  
	{1, "f4"},  // 2-3
	{1, "d#4"}, 
	{1, "d4"},  // 3-0
	{1, "c4"},
	{1, "d4"},  // 3-1
	{1, "d#4"},
	{1, "d4"},  // 3-2
	{1, "c4"},  
	{1, "b3"},  // 3-3
	{1, "d4"},

	{1, "c4"},  // 4-0
	{1, "d4"},
	{1, "d#4"}, // 4-1
	{1, "f4"},
	{1, "g4"},  // 4-2
	{2, "g4"},  
	{1, "c5"},  // 4-3
	{1, "a#4"}, 
	{1, "g4"},  // 5-0
	{2, "g4"},
	{1, "c4"},  // 5-1
	{0, "c4"},
	{1, "g4"},  // 5-2
	{1, "f4"},  
	{1, "d#4"}, // 5-3
	{1, "d4"}, 
	{1, "c4"},  // 6-0
	{1, "d4"},
	{1, "d#4"}, // 6-1
	{1, "f4"},
	{1, "g4"},  // 6-2
	{2, "g4"},  
	{1, "f4"},  // 6-3
	{1, "d#4"}, 
	{1, "d4"},  // 7-0
	{2, "d4"},
	{1, "d#4"}, // 7-1
	{2, "d#4"},  
	{1, "f4"},  // 7-2
	{2, "f4"},
	{1, "g4"},  // 7-3
	{2, "g4"}, 
	{1, "c4"},  // 8-0
	{2, "c4"} 
};

// lunghezza del brano
const int length = 66;
